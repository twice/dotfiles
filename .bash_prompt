#!/bin/bash

# Regular Colors
       WHITE="\[\033[0;37m\]"       

# High Intensty
       IWHITE="\[\033[0;97m\]"      

 #ANSI Color-Codes 256(8-bit) colors as per http://bit.ly/1gmVS98
         BPURPLE="\[\033[38;5;99m\]"
         GRAY="\[\033[38;5;253m\]"
  LIGHT_GREEN="\[\033[38;5;184m\]"
        VIOLA="\[\033[38;5;135m\]"
  BLUE_PURPLE="\[\033[38;5;69m\]"
        PEACH="\[\033[38;5;204m\]"
   LIME_GREEN="\[\033[38;5;190m\]"
   COLOR_NONE="\[\033[0m\]"

       IPEACH="\[\033[38;5;257m\]"
        OLIVE="\[\033[38;5;258m\]"
         GOLD="\[\033[38;5;259m\]"
       AZZURE="\[\033[38;5;260m\]"
   LIGHT_BLUE="\[\033[38;5;39m\]"
BRIGHT_PURPLE="\[\033[38;5;258m\]"
  GOLD_YELLOW="\[\033[38;5;220m\]"
  PAPAYA_WHIP="\[\033[38;5;221m\]"
 PAPAYA_WHIP2="\[\033[38;5;222m\]"
        ROSSO="\[\033[38;5;196m\]"
	   ORANGE="\[\033[38;5;202m\]"

PG_ARROWS="${IPEACH}❯${OLIVE}❯"
RED_ARROW="${ROSSO}❯"

#bash prompt vars
USERNAME="\u"
     CWD="\w"
TIME24HR="\t"
 NEWLINE="\n"
  PROMPT="\\$"

SEPARATOR="${VIOLA}|"
PS="${BPURPLE}${USERNAME}${GRAY}${CWD} ${PG_ARROWS} "
PS_END="${SEPARATOR}${GOLD_YELLOW}${TIME24HR}${NEWLINE}${BLUE_PURPLE}${PROMPT}${WHITE} "

#git constants
CLEAN_WORKING_DIR="working directory clean"
CHANGES_TO_COMMIT="Changes to be committed"
       GIT_STATUS=""
           BRANCH=""


function is_git_repo() {
  git branch &> /dev/null
}

function git_branch() {
  local ref=$(git symbolic-ref HEAD 2> /dev/null)
  echo ${ref##refs/heads/}
}

function working_directory_is_clean() {
  [[ ${GIT_STATUS} =~ $CLEAN_WORKING_DIR ]] 
}

function uncommitted_changes() {
  [[ $GIT_STATUS =~ $CHANGES_TO_COMMIT ]]
}

function build_git_prompt() {
  GIT_STATUS="$(git status 2> /dev/null)"
  local status=""

  if working_directory_is_clean ; then
    status="${LIME_GREEN}"
  elif uncommitted_changes ; then
    status="${LIGHT_GREEN}"
  else
    status="${ROSSO}"
  fi

  BRANCH="${ORANGE}git${GOLD_YELLOW}:${status}$(git_branch) ${COLOR_NONE}"
}

function create_git_prompt() {
  if is_git_repo ; then
    build_git_prompt
  else
    BRANCH=""
  fi
}

function active_virtualenv() {
  if test -z "$VIRTUAL_ENV" ; then
    VENV=""
  else
    VENV="${LIME_GREEN}venv${ROSSO} ✹ ${PAPAYA_WHIP2}$(basename $VIRTUAL_ENV)${ROSSO}${ROSSO} ❯ "
  fi
}

function create_prompt() {
  create_git_prompt #sets up BRANCH variable
  active_virtualenv #sets up VENV Variable

  PS1="${VENV}${PS}${BRANCH}${PS_END}"
}

PROMPT_COMMAND=create_prompt
